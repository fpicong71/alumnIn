// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebFormacion.Data;

namespace WebFormacion.Migrations
{
    [DbContext(typeof(WebContext))]
    [Migration("20210503201835_Init01")]
    partial class Init01
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebFormacion.Models.Alumno", b =>
                {
                    b.Property<string>("AlumnoID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Apellido1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apellido2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodigoPostal")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AlumnoID");

                    b.ToTable("Alumno");
                });

            modelBuilder.Entity("WebFormacion.Models.Contacto", b =>
                {
                    b.Property<string>("ContactoID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Apellido1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apellido2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Puesto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactoID");

                    b.ToTable("Contacto");
                });

            modelBuilder.Entity("WebFormacion.Models.Curso", b =>
                {
                    b.Property<string>("CursoID")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("DescripcionCurso")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("NombreCurso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CursoID");

                    b.ToTable("Curso");
                });

            modelBuilder.Entity("WebFormacion.Models.CursoEntidad", b =>
                {
                    b.Property<string>("EntidadID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CursoID")
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("EntidadID", "CursoID");

                    b.HasIndex("CursoID");

                    b.ToTable("CursoEntidad");
                });

            modelBuilder.Entity("WebFormacion.Models.Entidad", b =>
                {
                    b.Property<string>("EntidadID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CodigoPostal")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntidadID");

                    b.ToTable("Entidad");
                });

            modelBuilder.Entity("WebFormacion.Models.EntidadContacto", b =>
                {
                    b.Property<string>("EntidadID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContactoID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EntidadID", "ContactoID");

                    b.HasIndex("ContactoID");

                    b.ToTable("EntidadContacto");
                });

            modelBuilder.Entity("WebFormacion.Models.Historial", b =>
                {
                    b.Property<int>("HistorialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlumnoID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContactoID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CursoID")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Medio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mensaje")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HistorialID");

                    b.HasIndex("AlumnoID");

                    b.HasIndex("ContactoID");

                    b.HasIndex("CursoID");

                    b.ToTable("HistorialContactos");
                });

            modelBuilder.Entity("WebFormacion.Models.CursoEntidad", b =>
                {
                    b.HasOne("WebFormacion.Models.Curso", "Curso")
                        .WithMany("CursoEntidades")
                        .HasForeignKey("CursoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebFormacion.Models.Entidad", "Entidad")
                        .WithMany("CursoEntidades")
                        .HasForeignKey("EntidadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Entidad");
                });

            modelBuilder.Entity("WebFormacion.Models.EntidadContacto", b =>
                {
                    b.HasOne("WebFormacion.Models.Contacto", "Contacto")
                        .WithMany("EntidadContactos")
                        .HasForeignKey("ContactoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebFormacion.Models.Entidad", "Entidad")
                        .WithMany("EntidadContactos")
                        .HasForeignKey("EntidadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contacto");

                    b.Navigation("Entidad");
                });

            modelBuilder.Entity("WebFormacion.Models.Historial", b =>
                {
                    b.HasOne("WebFormacion.Models.Alumno", "Alumno")
                        .WithMany("Historiales")
                        .HasForeignKey("AlumnoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebFormacion.Models.Contacto", "Contacto")
                        .WithMany("Historiales")
                        .HasForeignKey("ContactoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebFormacion.Models.Curso", "Curso")
                        .WithMany("Historiales")
                        .HasForeignKey("CursoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Contacto");

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("WebFormacion.Models.Alumno", b =>
                {
                    b.Navigation("Historiales");
                });

            modelBuilder.Entity("WebFormacion.Models.Contacto", b =>
                {
                    b.Navigation("EntidadContactos");

                    b.Navigation("Historiales");
                });

            modelBuilder.Entity("WebFormacion.Models.Curso", b =>
                {
                    b.Navigation("CursoEntidades");

                    b.Navigation("Historiales");
                });

            modelBuilder.Entity("WebFormacion.Models.Entidad", b =>
                {
                    b.Navigation("CursoEntidades");

                    b.Navigation("EntidadContactos");
                });
#pragma warning restore 612, 618
        }
    }
}
